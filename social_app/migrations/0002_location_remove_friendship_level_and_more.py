# Generated by Django 4.2.2 on 2023-06-09 16:40

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("social_app", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("latitude", models.FloatField()),
                ("longitude", models.FloatField()),
            ],
        ),
        migrations.RemoveField(
            model_name="friendship",
            name="level",
        ),
        migrations.RemoveField(
            model_name="match",
            name="has_started",
        ),
        migrations.RemoveField(
            model_name="match",
            name="host_has_ball",
        ),
        migrations.RemoveField(
            model_name="match",
            name="is_over",
        ),
        migrations.RemoveField(
            model_name="match",
            name="position",
        ),
        migrations.RemoveField(
            model_name="match",
            name="velocity_x",
        ),
        migrations.RemoveField(
            model_name="match",
            name="velocity_y",
        ),
        migrations.RemoveField(
            model_name="player",
            name="score",
        ),
        migrations.AddField(
            model_name="match",
            name="createdAtTime",
            field=models.TimeField(default=datetime.time),
        ),
        migrations.AddField(
            model_name="match",
            name="duration",
            field=models.TimeField(default=datetime.time),
        ),
        migrations.AddField(
            model_name="match",
            name="numberOfHiders",
            field=models.IntegerField(default=4),
        ),
        migrations.AddField(
            model_name="match",
            name="numberOfHunters",
            field=models.IntegerField(default=2),
        ),
        migrations.AddField(
            model_name="match",
            name="password",
            field=models.CharField(default="", max_length=10),
        ),
        migrations.AddField(
            model_name="match",
            name="players",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="playersInMatch",
                to="social_app.player",
            ),
        ),
        migrations.AddField(
            model_name="match",
            name="radius",
            field=models.FloatField(default=5, max_length=10),
        ),
        migrations.AddField(
            model_name="player",
            name="role",
            field=models.CharField(
                choices=[("HI", "Hider"), ("HU", "Hunter")], max_length=10, null=True
            ),
        ),
        migrations.AlterField(
            model_name="friendship",
            name="friend",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="friendTo",
                to="social_app.player",
            ),
        ),
        migrations.AlterField(
            model_name="friendship",
            name="player",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="friendFrom",
                to="social_app.player",
            ),
        ),
        migrations.AlterField(
            model_name="match",
            name="host",
            field=models.OneToOneField(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="playerHost",
                to="social_app.player",
            ),
        ),
        migrations.CreateModel(
            name="Object",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("T", "Trap"), ("L", "Loot")], max_length=10
                    ),
                ),
                (
                    "location",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social_app.location",
                    ),
                ),
                (
                    "match",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social_app.match",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Clue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "location",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social_app.location",
                    ),
                ),
                (
                    "match",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social_app.match",
                    ),
                ),
                (
                    "player",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="social_app.player",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="match",
            name="createdAtLocation",
            field=models.OneToOneField(
                default={41.84163, 9.78773},
                on_delete=django.db.models.deletion.CASCADE,
                to="social_app.location",
            ),
        ),
        migrations.AddField(
            model_name="player",
            name="location",
            field=models.OneToOneField(
                default={41.84163, 9.78773},
                on_delete=django.db.models.deletion.CASCADE,
                to="social_app.location",
            ),
        ),
        migrations.CreateModel(
            name="FriendshipRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_accepted", models.BooleanField()),
                (
                    "friend",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requestedTo",
                        to="social_app.player",
                    ),
                ),
                (
                    "player",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requesterFrom",
                        to="social_app.player",
                    ),
                ),
            ],
            options={
                "unique_together": {("player", "friend")},
            },
        ),
    ]
